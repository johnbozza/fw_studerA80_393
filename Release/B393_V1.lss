
B393_V1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000176  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800100  00800100  000001ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000df2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000f26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a9 32       	cpi	r26, 0x29	; 41
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 ae 00 	call	0x15c	; 0x15c <main>
  88:	0c 94 b9 00 	jmp	0x172	; 0x172 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <board_init>:
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	cd b7       	in	r28, 0x3d	; 61
  96:	de b7       	in	r29, 0x3e	; 62
  98:	0e 94 61 00 	call	0xc2	; 0xc2 <circuit_init>
  9c:	0e 94 58 00 	call	0xb0	; 0xb0 <get_circuit>
  a0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  a4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  a8:	00 00       	nop
  aa:	df 91       	pop	r29
  ac:	cf 91       	pop	r28
  ae:	08 95       	ret

000000b0 <get_circuit>:
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	cd b7       	in	r28, 0x3d	; 61
  b6:	de b7       	in	r29, 0x3e	; 62
  b8:	82 e0       	ldi	r24, 0x02	; 2
  ba:	91 e0       	ldi	r25, 0x01	; 1
  bc:	df 91       	pop	r29
  be:	cf 91       	pop	r28
  c0:	08 95       	ret

000000c2 <circuit_init>:
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	00 d0       	rcall	.+0      	; 0xc8 <circuit_init+0x6>
  c8:	00 d0       	rcall	.+0      	; 0xca <circuit_init+0x8>
  ca:	1f 92       	push	r1
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	1a 82       	std	Y+2, r1	; 0x02
  d2:	19 82       	std	Y+1, r1	; 0x01
  d4:	1a c0       	rjmp	.+52     	; 0x10a <circuit_init+0x48>
  d6:	ce 01       	movw	r24, r28
  d8:	03 96       	adiw	r24, 0x03	; 3
  da:	0e 94 92 00 	call	0x124	; 0x124 <make_flipflop>
  de:	29 81       	ldd	r18, Y+1	; 0x01
  e0:	3a 81       	ldd	r19, Y+2	; 0x02
  e2:	c9 01       	movw	r24, r18
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	82 0f       	add	r24, r18
  ea:	93 1f       	adc	r25, r19
  ec:	9c 01       	movw	r18, r24
  ee:	2e 5f       	subi	r18, 0xFE	; 254
  f0:	3e 4f       	sbci	r19, 0xFE	; 254
  f2:	8b 81       	ldd	r24, Y+3	; 0x03
  f4:	9c 81       	ldd	r25, Y+4	; 0x04
  f6:	ad 81       	ldd	r26, Y+5	; 0x05
  f8:	f9 01       	movw	r30, r18
  fa:	80 83       	st	Z, r24
  fc:	91 83       	std	Z+1, r25	; 0x01
  fe:	a2 83       	std	Z+2, r26	; 0x02
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	9a 81       	ldd	r25, Y+2	; 0x02
 104:	01 96       	adiw	r24, 0x01	; 1
 106:	9a 83       	std	Y+2, r25	; 0x02
 108:	89 83       	std	Y+1, r24	; 0x01
 10a:	89 81       	ldd	r24, Y+1	; 0x01
 10c:	9a 81       	ldd	r25, Y+2	; 0x02
 10e:	05 97       	sbiw	r24, 0x05	; 5
 110:	14 f3       	brlt	.-60     	; 0xd6 <circuit_init+0x14>
 112:	00 00       	nop
 114:	0f 90       	pop	r0
 116:	0f 90       	pop	r0
 118:	0f 90       	pop	r0
 11a:	0f 90       	pop	r0
 11c:	0f 90       	pop	r0
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <make_flipflop>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	00 d0       	rcall	.+0      	; 0x12a <make_flipflop+0x6>
 12a:	cd b7       	in	r28, 0x3d	; 61
 12c:	de b7       	in	r29, 0x3e	; 62
 12e:	9a 83       	std	Y+2, r25	; 0x02
 130:	89 83       	std	Y+1, r24	; 0x01
 132:	89 81       	ldd	r24, Y+1	; 0x01
 134:	9a 81       	ldd	r25, Y+2	; 0x02
 136:	21 e0       	ldi	r18, 0x01	; 1
 138:	fc 01       	movw	r30, r24
 13a:	20 83       	st	Z, r18
 13c:	89 81       	ldd	r24, Y+1	; 0x01
 13e:	9a 81       	ldd	r25, Y+2	; 0x02
 140:	21 e0       	ldi	r18, 0x01	; 1
 142:	fc 01       	movw	r30, r24
 144:	21 83       	std	Z+1, r18	; 0x01
 146:	89 81       	ldd	r24, Y+1	; 0x01
 148:	9a 81       	ldd	r25, Y+2	; 0x02
 14a:	21 e0       	ldi	r18, 0x01	; 1
 14c:	fc 01       	movw	r30, r24
 14e:	22 83       	std	Z+2, r18	; 0x02
 150:	00 00       	nop
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	df 91       	pop	r29
 158:	cf 91       	pop	r28
 15a:	08 95       	ret

0000015c <main>:
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	cd b7       	in	r28, 0x3d	; 61
 162:	de b7       	in	r29, 0x3e	; 62
 164:	0e 94 48 00 	call	0x90	; 0x90 <board_init>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
